name: Trunk-Based Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]

permissions:
  contents: write
  actions: read
  id-token: write

jobs:
  bump-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout with full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Poetry
        run: pip install poetry

      - name: Determine bump level
        id: bump
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            echo "level=major" >> $GITHUB_OUTPUT
          else
            echo "level=minor" >> $GITHUB_OUTPUT
          fi

      - name: Bump version, commit & tag
        env:
          LEVEL: ${{ steps.bump.outputs.level }}
        run: |
          poetry version "$LEVEL"
          NEW_VER=$(poetry version -s)
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add pyproject.toml
          git commit -m "chore: bump to v$NEW_VER"
          git tag "v$NEW_VER"
          git push origin HEAD --follow-tags

      - name: Build distribution
        run: poetry build

      - name: Create Release & upload artifacts
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          artifacts: dist/*.tar.gz,dist/*.whl
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}

